rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Products collection
    match /products/{productId} {
      // Anyone can read products (for browsing)
      allow read: if true;
      // Only admin can create/update/delete products
      allow write: if isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Users collection
    match /users/{userId} {
      // Users can read and update their own data
      allow read, update: if isOwner(userId);
      // Allow creation during registration
      allow create: if isAuthenticated() && request.auth.uid == userId;
      // Only admin can delete users
      allow delete: if isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Cart collection - nested under users
    match /users/{userId}/cart/{itemId} {
      // Only the owner can manage their cart
      allow read, write: if isOwner(userId);
    }

    // Orders collection - nested under users
    match /users/{userId}/orders/{orderId} {
      // Users can read their own orders and create new ones
      allow read, create: if isOwner(userId);
      // Only admin can update/delete orders
      allow update, delete: if isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
